{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  navbar: \"\",\n  toggleable: \"lg\",\n  type: \"dark\",\n  variant: \"info\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  id: \"app\"\n};\nconst _hoisted_3 = {\n  class: \"bg-success text-white text-center p-2\"\n};\nconst _hoisted_4 = {\n  class: \"bg-warning container-fluid p-4\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"row\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col text-center\"\n}, [/*#__PURE__*/_createElementVNode(\"b\", null, \"Nothing to do. Hurrah!\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = [_hoisted_6];\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col font-weight-bold\"\n}, \"Pharmacy\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-2 font-weight-bold\"\n}, \"Time\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-2 font-weight-bold\"\n}, \"Done\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = {\n  class: \"col\"\n};\nconst _hoisted_10 = {\n  class: \"col-2 text-center\"\n};\nconst _hoisted_11 = [\"onUpdate:modelValue\"];\nconst _hoisted_12 = {\n  class: \"row py-2\"\n};\nconst _hoisted_13 = {\n  class: \"col\"\n};\nconst _hoisted_14 = {\n  class: \"col-2\"\n};\nconst _hoisted_15 = {\n  class: \"row bg-primary py-2 mt-2 text-white\"\n};\nconst _hoisted_16 = {\n  class: \"col text-center\"\n};\n\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"form-check-label font-weight-bold\"\n}, \" Hide completed Pharmacies \", -1\n/* HOISTED */\n);\n\nconst _hoisted_18 = {\n  class: \"col text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h4\", _hoisted_3, _toDisplayString($data.name) + \"'s ToDo List \", 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_4, [$options.filteredTasks.length == 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _hoisted_7)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_hoisted_8, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredTasks, t => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"row\",\n      key: t.action\n    }, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(t.action), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_10, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => t.done = $event,\n      class: \"form-check-input\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_11), [[_vModelCheckbox, t.done]])])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 64\n  /* STABLE_FRAGMENT */\n  )), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_withDirectives(_createElementVNode(\"input\", {\n    placeholder: \"Enter a Favourite Task\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newItemText = $event),\n    class: \"form-control\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.newItemText]])]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"button\", {\n    class: \"btn btn-success\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addNewTodo && $options.addNewTodo(...args))\n  }, \"Add\")])]), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.hideCompleted = $event),\n    class: \"form-check-input\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelCheckbox, $data.hideCompleted]]), _hoisted_17]), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"button\", {\n    class: \"btn btn-sm btn-warning\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.deleteCompleted && $options.deleteCompleted(...args))\n  }, \" Delete Completed \")])])])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACIA,oBAGM,KAHN,EAGM;EAHDC,MAAM,EAAN,EAGC;EAHMC,UAAU,EAAC,IAGjB;EAHsBC,IAAI,EAAC,MAG3B;EAHkCC,OAAO,EAAC;AAG1C,CAHN;;AAAA;;;EAIGC,EAAE,EAAC;;;EACAC,KAAK,EAAC;;;EAGLA,KAAK,EAAC;;;;EACFA,KAAK,EAAC;;;gCACPN,oBAEM,KAFN,EAEM;EAFDM,KAAK,EAAC;AAEL,CAFN,EAA4B,cACxBN,oBAA6B,GAA7B,EAA6B,IAA7B,EAAG,wBAAH,CADwB,CAA5B;;AAAA;;oBAAAO;;gCAKAP,oBAIM,KAJN,EAIM;EAJDM,KAAK,EAAC;AAIL,CAJN,EAAgB,cACZN,oBAAgD,KAAhD,EAAgD;EAA3CM,KAAK,EAAC;AAAqC,CAAhD,EAAkC,UAAlC,CADY,eAEZN,oBAA8C,KAA9C,EAA8C;EAAzCM,KAAK,EAAC;AAAmC,CAA9C,EAAoC,MAApC,CAFY,eAGZN,oBAA8C,KAA9C,EAA8C;EAAzCM,KAAK,EAAC;AAAmC,CAA9C,EAAoC,MAApC,CAHY,CAAhB;;AAAA;;;EAMSA,KAAK,EAAC;;;EACNA,KAAK,EAAC;;;;EAOdA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;EAGNA,KAAK,EAAC;;;EASVA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;iCAGPN,oBAEQ,OAFR,EAEQ;EAFDM,KAAK,EAAC;AAEL,CAFR,EAAiD,6BAAjD,EAEA;AAAA;AAFA;;;EAICA,KAAK,EAAC;;;6DAlDrBE,YAIFR,oBAsDM,KAtDN,cAsDM,CArDFA,oBAEK,IAFL,cAEKS,iBADCC,UACD,IADO,eADZ,EAEA;EAAA;EAFA,CAqDE,EAlDFV,oBAiDM,KAjDN,cAiDM,CAhDqBW,uBAAcC,MAAd,IAAoB,mBAA3CC,oBAIM,KAJN,cAIMC,UAJN,oBAKAD,oBAcWE,SAdX,EAcW;IAAAC;EAAA,CAdX,EAcW,CAbPC,UAaO,qBARPJ,oBAMME,SANN,EAMM,IANN,EAMMG,YANuBP,sBAMvB,EANkBQ,CAAkB,IAAjB;yBAAzBN,oBAMM,KANN,EAMM;MANDP,KAAK,EAAC,KAML;MAN6CU,GAAG,EAAEG,CAAC,CAACC;IAMpD,CANN,GACIpB,oBAAmC,KAAnC,cAAmCS,iBAAhBU,CAAC,CAACC,MAAc,CAAnC,EAA2B;IAAA;IAA3B,GACApB,oBAGM,KAHN,eAGM,iBAFFA,oBACgC,OADhC,EACgC;MADzBG,IAAI,EAAC,UACoB;uCADAgB,CAAC,CAACE,OAAIC,MACN;MAA3BhB,KAAK,EAAC;IAAqB,CADhC;;IAAA,mCAAgCa,CAAC,CAACE,OAEhC,CAHN,EAFJ;GAMM,CANN;;EAAA,CAQO,EAdX;;EAAA,EA2CE,EA5BFrB,oBAQM,KARN,eAQM,CAPFA,oBAEM,KAFN,eAEM,iBADFA,oBAAyF,OAAzF,EAAyF;IAAlFuB,WAAW,EAAC,wBAAsE;+DAApCb,oBAAWY,OAAyB;IAAvBhB,KAAK,EAAC;EAAiB,CAAzF;;EAAA,kBAAqDI,oBACnD,CAFN,CAOE,EAJFV,oBAGM,KAHN,eAGM,CAFFA,oBACwC,QADxC,EACwC;IADhCM,KAAK,EAAC,iBAC0B;IAA/BkB,OAAK,yCAAEb,mDAAF;EAA0B,CADxC,EAC4B,KAD5B,CAEE,CAHN,CAIE,CARN,CA4BE,EAfFX,oBAcM,KAdN,eAcM,CAbFA,oBAMM,KANN,eAMM,iBALFA,oBAC+B,OAD/B,EAC+B;IADxBG,IAAI,EAAC,UACmB;+DADCO,sBAAaY,OACd;IAA3BhB,KAAK,EAAC;EAAqB,CAD/B;;EAAA,sBAAgCI,sBAK9B,EAHFe,WAGE,CANN,CAaE,EANFzB,oBAKM,KALN,eAKM,CAJFA,oBAGS,QAHT,EAGS;IAHDM,KAAK,EAAC,wBAGL;IAFIkB,OAAK,yCAAEb,6DAAF;EAET,CAHT,EACqC,oBADrC,CAIE,CALN,CAME,CAdN,CAeE,CAjDN,CAkDE,CAtDN","names":["_createElementVNode","navbar","toggleable","type","variant","id","class","_hoisted_6","_hoisted_1","_toDisplayString","$data","$options","length","_createElementBlock","_hoisted_7","_Fragment","key","_hoisted_8","_renderList","t","action","done","$event","placeholder","onClick","_hoisted_17"],"sourceRoot":"","sources":["/home/nsamba/Desktop/laravel_projects/Vue Projects/hackerpair/src/App.vue"],"sourcesContent":["<template>\n    <div navbar toggleable=\"lg\" type=\"dark\" variant=\"info\">\n\n\n    </div>\n  <div id=\"app\">\n      <h4 class=\"bg-success text-white text-center p-2\">\n          {{name}}'s ToDo List\n      </h4>\n      <div class=\" bg-warning container-fluid p-4\">\n          <div class=\"row\" v-if=\"filteredTasks.length == 0\">\n              <div class=\"col text-center\">\n                  <b>Nothing to do. Hurrah!</b>\n              </div>\n          </div>\n          <template v-else>\n              <div class=\"row\">\n                  <div class=\"col font-weight-bold\">Pharmacy</div>\n                  <div class=\"col-2 font-weight-bold\">Time</div>\n                  <div class=\"col-2 font-weight-bold\">Done</div>\n              </div>\n              <div class=\"row\" v-for=\"t in filteredTasks\" v-bind:key=\"t.action\">\n                  <div class=\"col\">{{t.action}}</div>\n                  <div class=\"col-2 text-center\">\n                      <input type=\"checkbox\" v-model=\"t.done\" \n                           class=\"form-check-input\" />\n                  </div>\n              </div>\n         \n          </template>\n          <div class=\"row py-2\">\n              <div class=\"col\">\n                  <input placeholder=\"Enter a Favourite Task\" v-model=\"newItemText\" class=\"form-control\" />\n              </div>\n              <div class=\"col-2\">\n                  <button class=\"btn btn-success\" \n                      v-on:click=\"addNewTodo\">Add</button>\n              </div>\n          </div>\n\n         \n         \n\n          <div class=\"row bg-primary py-2 mt-2 text-white\">\n              <div class=\"col text-center\">\n                  <input type=\"checkbox\" v-model=\"hideCompleted\" \n                      class=\"form-check-input\" />\n                  <label class=\"form-check-label font-weight-bold\">\n                      Hide completed Pharmacies\n                  </label>\n              </div>\n              <div class=\"col text-center\">\n                  <button class=\"btn btn-sm btn-warning\" \n                          v-on:click=\"deleteCompleted\">\n                      Delete Completed\n                  </button>\n              </div>\n          </div>\n      </div>\n  </div>\n</template>\n\n<script>\n\n  export default {\n      name: 'app',\n      data() {\n          return {\n              name: \"Pharmacy\",\n              tasks: [],\n              hideCompleted: true,\n              newItemText: \"\"\n          }\n      },\n      computed: {\n          filteredTasks() {\n              return this.hideCompleted ?\n                  this.tasks.filter(t => !t.done) : this.tasks\n          }\n      },\n      methods: {\n          addNewTodo() {\n              this.tasks.push({\n                  action: this.newItemText,\n                  done: false\n              });\n              this.storeData();\n              this.newItemText = \"\";\n          },\n          storeData() {\n              localStorage.setItem(\"todos\", JSON.stringify(this.tasks));\n          },\n          deleteCompleted() {\n              this.tasks = this.tasks.filter(t => !t.done);\n              this.storeData();\n          }\n      },\n      created() {\n          let data = localStorage.getItem(\"todos\");\n          if (data != null) {\n              this.tasks = JSON.parse(data);\n          }\n      }\n  }\n</script>\n"]},"metadata":{},"sourceType":"module"}